# Using SQL to query a database with multiple tables to gather customer and order data.

#1. How many orders were placed in January?
SELECT count(orderId) AS jan_orders
  FROM BIT_DB.JanSales
 WHERE length(orderID) = 6;
 
#2. How many Jan orders were for an iPhone?
SELECT COUNT(orderid) AS jan_iphone_orders
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT c.acctnum AS feb_acctnum
  FROM customers c
       INNER JOIN
       FebSales f ON c.order_id = f.orderID
 WHERE length(orderID) = 6;

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT product,
       min(price) AS lowest_item_price
  FROM BIT_DB.JanSales
   group by product, price
   order by price asc
   limit 1;

#5. What is the total revenue for each product sold in January?
SELECT product,
       round(sum(price), 2) AS total_revenue
  FROM BIT_DB.JanSales
 GROUP BY product
HAVING sum(price) > 0
 ORDER BY price DESC;
 
#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product,
       sum(quantity) AS quantity,
       round(sum(price), 2) * quantity AS total_revenue
  FROM BIT_DB.FebSales
 WHERE location = "548 Lincoln St, Seattle, WA 98101"
 GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 
SELECT count(DISTINCT c.acctnum) AS orders_with_mult_products,
       round(avg(quantity * price), 2) AS avg_price
  FROM BIT_DB.FebSales f
       JOIN
       BIT_DB.customers c ON f.orderID = c.order_ID
 WHERE f.quantity > 2 AND 
       length(orderID) = 6 AND 
       orderID <> 'Order ID';
       
#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
select product, sum(quantity)
from
BIT_DB.FebSales
where location like '%Los Angeles%'
group by product;

-- More Customer & Order Analytics
-- #1. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT  location, count(location) as number_of_orders
  FROM BIT_DB.JanSales
 WHERE location LIKE '%NY%'
 group by location
 having count(location)>=3;
 
-- #2. How many of each type of headphone were sold in February?
SELECT product,
       sum(quantity) as num_sold
  FROM BIT_DB.FebSales
 WHERE product LIKE "%headphone%" 
 GROUP BY product;

-- #3. What was the average amount spent per account in February?
SELECT sum(quantity * price) / count(c.acctnum) AS avg_spent_per_account
  FROM BIT_DB.FebSales f
       LEFT JOIN
       BIT_DB.customers c ON f.orderID = c.order_ID
 WHERE length(orderID) = 6 AND 
       OrderID <> 'order ID';
 
-- #4. What was the average quantity of products purchased per account in February?
select sum(quantity)/count(c.acctnum) as avg_items_per_account
  FROM BIT_DB.FebSales f
       LEFT JOIN
       BIT_DB.customers c 
       ON f.orderID = c.order_ID
 WHERE length(orderID) = 6 AND 
       OrderID <> 'order ID';
       
-- #5. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product,
       sum(quantity * price) AS total_revenue
  FROM BIT_DB.JanSales
 GROUP BY product
HAVING length(orderID) = 6 AND 
       OrderID <> 'order ID'
 ORDER BY total_revenue DESC
 LIMIT 1;

